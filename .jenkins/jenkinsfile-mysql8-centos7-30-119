pipeline {
    agent {
        label 'agent-30-119'
    }

    options{
        disableConcurrentBuilds()
        timeout(time:2000, unit: 'HOURS')
    }

    stages {

        stage('ImportTPCHData') {
            steps {
                sh label: '', 
                script: '''

                    exit 0

                    JENKINS_NODE_COOKIE=dontKillMe
                    export JENKINS_NODE_COOKIE=dontKillMe

                    TB_TPCH_NUM=`mysql -e "show databases;" | grep tpch | grep -v grep | wc -l`

                    if [ "0" != "$TB_TPCH_NUM" ]; then
                        echo "tpch data has imported"
                        # exit 0
                    fi

                    cd .jenkins

                    rm *.tar.gz -rf

                    wget http://192.168.30.30/nginx_html/tpc-h-innodb.tar.gz

                    rm tpc-h -rf
                    tar --use-compress-program=pigz -xvpf tpc-h-innodb.tar.gz
                    cd tpc-h
                    cd dbgen

                    make -j`nproc`
                    
                    # GB
                    # ./dbgen -s 10
                    # mkdir -p stonedb/
                    # mv *.tbl stonedb/
                    # cp dss.ddl stonedb/dss_stonedb.ddl		

                    mysql -e "create database tpch;" && set ?=0

                    mysql -D tpch -p123 -e "source ./stonedb/dss_stonedb.ddl "  && set ?=0

                    mysql -D tpch -p123 < ./stonedb.sql  && set ?=0

                    mysql -D tpch -p123 -e " show tables; "

                    bash ./split_file2db.sh 

                    cd ../..
                    rm tpc-h -rf
                    rm *.tar.gz -rf

                '''
            }
        }

        stage('RunTestSubQueryExistsUseHahParalToSVG') {
            steps {
                sh label: '', 
                script: '''

                    # exit 0

                    JENKINS_NODE_COOKIE=dontKillMe
                    export JENKINS_NODE_COOKIE=dontKillMe

                    cd .jenkins
                    rm FlameGraph -rf

                    rm FlameGraph.tar.gz -rf
                    wget http://192.168.30.30/nginx_html/FlameGraph.tar.gz

                    tar -xzvf FlameGraph.tar.gz
                    cd FlameGraph

                    # yum install perf -y

                    
                    

                    perf record -a -F 99 -g -p $(pgrep -x mysqld) -- mysql -D tpch -p123 -e "select
                            o_orderpriority,
                            count(*) as order_count
                        from
                            orders
                        where
                            o_orderdate >= date '1993-07-01'
                            and o_orderdate < date '1993-07-01' + interval '3' month
                            and exists (
                                select
                                    *
                                from
                                    lineitem
                                where
                                    l_orderkey = o_orderkey
                                    and l_commitdate < l_receiptdate
                            )
                        group by
                            o_orderpriority
                        order by
                            o_orderpriority ;"

                    perf script -i perf.data > out.perf
                    ./stackcollapse-perf.pl out.perf > out.floded
                    ./flamegraph.pl out.floded > mysql.svg

                    NAME=subquery-Exists-paral-"`date -d yesterday +%Y%m%d%h%m%s`"

                    mkdir -p /data/perf
                    mkdir -p /data/perf/$NAME
                    cp ./mysql.svg /data/perf/$NAME/$NAME.mysql.svg  
                    #cp ./perf.data /data/perf/$NAME/$NAME.perf.data
                    #cp ./out.perf /data/perf/$NAME/$NAME.out.perf  
                    #cp ./out.floded /data/perf/$NAME/$NAME.out.floded

                    cd /data/perf
                    tar -czvf $NAME.tar.gz $NAME

                    cp $NAME.tar.gz /usr/share/nginx/html/$NAME.tar.gz

                    IP=`hostname -I |awk '{print $1}'`
                    echo http://$IP/$NAME.tar.gz

                '''
            }
        }

        stage('RunTestSubQueryHashJoinParalToSVG') {
            steps {
                sh label: '', 
                script: '''

                    exit 0

                    JENKINS_NODE_COOKIE=dontKillMe
                    export JENKINS_NODE_COOKIE=dontKillMe

                    cd .jenkins
                    rm FlameGraph -rf

                    rm FlameGraph.tar.gz -rf
                    wget http://192.168.30.30/nginx_html/FlameGraph.tar.gz

                    tar -xzvf FlameGraph.tar.gz
                    cd FlameGraph

                    # yum install perf -y

                    
                    

                    perf record -a -F 99 -g -p $(pgrep -x mysqld) --  mysql -D tpch -p123 -e " select 
                        o_orderpriority, count(*) as order_count
                        from orders,lineitem
                        where o_orderdate >= date '1993-07-01'
                        and o_orderdate < date '1993-07-01' + interval '3' month
                        and o_orderkey = l_orderkey 
                        group by o_orderpriority
                        order by o_orderpriority;"


                    perf script -i perf.data > out.perf
                    ./stackcollapse-perf.pl out.perf > out.floded
                    ./flamegraph.pl out.floded > mysql.svg

                    NAME=subquery-hashjoin-paral-"`date -d yesterday +%Y%m%d%h%m%s`"

                    mkdir -p /data/perf
                    mkdir -p /data/perf/$NAME
                    cp ./mysql.svg /data/perf/$NAME/$NAME.mysql.svg  
                    #cp ./perf.data /data/perf/$NAME/$NAME.perf.data
                    #cp ./out.perf /data/perf/$NAME/$NAME.out.perf  
                    #cp ./out.floded /data/perf/$NAME/$NAME.out.floded

                    cd /data/perf
                    tar -czvf $NAME.tar.gz $NAME

                    cp $NAME.tar.gz /usr/share/nginx/html/$NAME.tar.gz

                    IP=`hostname -I |awk '{print $1}'`
                    echo http://$IP/$NAME.tar.gz

                '''
            }
        }

        stage('RunTestSlowQ2HashParalToSVG') {
            steps {
                sh label: '', 
                script: '''

                    # exit 0

                    JENKINS_NODE_COOKIE=dontKillMe
                    export JENKINS_NODE_COOKIE=dontKillMe

                    cd .jenkins
                    rm FlameGraph -rf

                    rm FlameGraph.tar.gz -rf
                    wget http://192.168.30.30/nginx_html/FlameGraph.tar.gz

                    tar -xzvf FlameGraph.tar.gz
                    cd FlameGraph

                    # yum install perf -y

                    
                    

                    perf record -a -F 99 -g -p $(pgrep -x mysqld) --  mysql -D tpch -p123 -e " 
                        select
                            s_acctbal,
                            s_name,
                            n_name,
                            p_partkey,
                            p_mfgr,
                            s_address,
                            s_phone,
                            s_comment
                        from
                            part,
                            supplier,
                            partsupp,
                            nation,
                            region
                        where
                            p_partkey = ps_partkey
                            and s_suppkey = ps_suppkey
                            and p_size = 15
                            and p_type like '%BRASS'
                            and s_nationkey = n_nationkey
                            and n_regionkey = r_regionkey
                            and r_name = 'EUROPE'
                            and ps_supplycost = (
                            select
                                    min(ps_supplycost)
                                from
                                    partsupp,
                                    supplier,
                                    nation,
                                    region
                                where
                                    p_partkey = ps_partkey
                                    and s_suppkey = ps_suppkey
                                    and s_nationkey = n_nationkey
                                    and n_regionkey = r_regionkey
                                    and r_name = 'EUROPE'
                            )
                        order by
                            s_acctbal desc,
                            n_name,
                            s_name,
                            p_partkey
                        limit 100; 
                    "


                    perf script -i perf.data > out.perf
                    ./stackcollapse-perf.pl out.perf > out.floded
                    ./flamegraph.pl out.floded > mysql.svg

                    NAME=slow-q2-hash-paral-"`date -d yesterday +%Y%m%d%h%m%s`"

                    mkdir -p /data/perf
                    mkdir -p /data/perf/$NAME
                    cp ./mysql.svg /data/perf/$NAME/$NAME.mysql.svg  
                    #cp ./perf.data /data/perf/$NAME/$NAME.perf.data
                    #cp ./out.perf /data/perf/$NAME/$NAME.out.perf  
                    #cp ./out.floded /data/perf/$NAME/$NAME.out.floded

                    cd /data/perf
                    tar -czvf $NAME.tar.gz $NAME

                    cp $NAME.tar.gz /usr/share/nginx/html/$NAME.tar.gz

                    IP=`hostname -I |awk '{print $1}'`
                    echo http://$IP/$NAME.tar.gz

                '''
            }
        }

        stage('RunTestSlowQ16HashParalToSVG') {
            steps {
                sh label: '', 
                script: '''

                    # exit 0

                    JENKINS_NODE_COOKIE=dontKillMe
                    export JENKINS_NODE_COOKIE=dontKillMe

                    cd .jenkins
                    rm FlameGraph -rf

                    rm FlameGraph.tar.gz -rf
                    wget http://192.168.30.30/nginx_html/FlameGraph.tar.gz

                    tar -xzvf FlameGraph.tar.gz
                    cd FlameGraph

                    # yum install perf -y

                    
                    

                    perf record -a -F 99 -g -p $(pgrep -x mysqld) --  mysql -D tpch -p123 -e " 
                    select
                        p_brand,
                        p_type,
                        p_size,
                        count(distinct ps_suppkey) as supplier_cnt
                    from
                        partsupp,
                        part
                    where
                        p_partkey = ps_partkey
                        and p_brand <> 'Brand#45'
                        and p_type not like 'MEDIUM POLISHED%'
                        and p_size in (49, 14, 23, 45, 19, 3, 36, 9)
                        and ps_suppkey not in (
                            select
                                s_suppkey
                            from
                                supplier
                            where
                                s_comment like '%Customer%Complaints%'
                        )
                    group by
                        p_brand,
                        p_type,
                        p_size
                    order by
                        supplier_cnt desc,
                        p_brand,
                        p_type,
                        p_size;
                    "


                    perf script -i perf.data > out.perf
                    ./stackcollapse-perf.pl out.perf > out.floded
                    ./flamegraph.pl out.floded > mysql.svg

                    NAME=slow-16-hash-paral-"`date -d yesterday +%Y%m%d%h%m%s`"

                    mkdir -p /data/perf
                    mkdir -p /data/perf/$NAME
                    cp ./mysql.svg /data/perf/$NAME/$NAME.mysql.svg  
                    #cp ./perf.data /data/perf/$NAME/$NAME.perf.data
                    #cp ./out.perf /data/perf/$NAME/$NAME.out.perf  
                    #cp ./out.floded /data/perf/$NAME/$NAME.out.floded

                    cd /data/perf
                    tar -czvf $NAME.tar.gz $NAME

                    cp $NAME.tar.gz /usr/share/nginx/html/$NAME.tar.gz

                    IP=`hostname -I |awk '{print $1}'`
                    echo http://$IP/$NAME.tar.gz

                '''
            }
        }


        stage('RunTestSlowQ17HashParalToSVG') {
            steps {
                sh label: '', 
                script: '''

                    # exit 0

                    JENKINS_NODE_COOKIE=dontKillMe
                    export JENKINS_NODE_COOKIE=dontKillMe

                    cd .jenkins
                    rm FlameGraph -rf

                    rm FlameGraph.tar.gz -rf
                    wget http://192.168.30.30/nginx_html/FlameGraph.tar.gz

                    tar -xzvf FlameGraph.tar.gz
                    cd FlameGraph

                    # yum install perf -y

                    
                    

                    perf record -a -F 99 -g -p $(pgrep -x mysqld) --  mysql -D tpch -p123 -e " 
                        select
                            sum(l_extendedprice) / 7.0 as avg_yearly
                        from
                            lineitem,
                            part
                        where
                            p_partkey = l_partkey
                            and p_brand = 'Brand#23'
                            and p_container = 'MED BOX'
                            and l_quantity < (
                                select
                                    0.2 * avg(l_quantity)
                                from
                                    lineitem
                                where
                                    l_partkey = p_partkey
                            );
                    "


                    perf script -i perf.data > out.perf
                    ./stackcollapse-perf.pl out.perf > out.floded
                    ./flamegraph.pl out.floded > mysql.svg

                    NAME=slow-q17-hash-paral-"`date -d yesterday +%Y%m%d%h%m%s`"

                    mkdir -p /data/perf
                    mkdir -p /data/perf/$NAME
                    cp ./mysql.svg /data/perf/$NAME/$NAME.mysql.svg  
                    #cp ./perf.data /data/perf/$NAME/$NAME.perf.data
                    #cp ./out.perf /data/perf/$NAME/$NAME.out.perf  
                    #cp ./out.floded /data/perf/$NAME/$NAME.out.floded

                    cd /data/perf
                    tar -czvf $NAME.tar.gz $NAME

                    cp $NAME.tar.gz /usr/share/nginx/html/$NAME.tar.gz

                    IP=`hostname -I |awk '{print $1}'`
                    echo http://$IP/$NAME.tar.gz

                '''
            }
        }

        stage('RunTestSlowQ18HashParalToSVG') {
            steps {
                sh label: '', 
                script: '''

                    # exit 0

                    JENKINS_NODE_COOKIE=dontKillMe
                    export JENKINS_NODE_COOKIE=dontKillMe

                    cd .jenkins
                    rm FlameGraph -rf

                    rm FlameGraph.tar.gz -rf
                    wget http://192.168.30.30/nginx_html/FlameGraph.tar.gz

                    tar -xzvf FlameGraph.tar.gz
                    cd FlameGraph

                    # yum install perf -y

                    
                    

                    perf record -a -F 99 -g -p $(pgrep -x mysqld) --  mysql -D tpch -p123 -e " 
                            select
                                c_name,
                                c_custkey,
                                o_orderkey,
                                o_orderdate,
                                o_totalprice,
                                sum(l_quantity)
                            from
                                customer,
                                orders,
                                lineitem
                            where
                                o_orderkey in (
                                    select
                                        l_orderkey
                                    from
                                        lineitem
                                    group by
                                        l_orderkey having
                                            sum(l_quantity) > 300
                                )
                                and c_custkey = o_custkey
                                and o_orderkey = l_orderkey
                            group by
                                c_name,
                                c_custkey,
                                o_orderkey,
                                o_orderdate,
                                o_totalprice
                            order by
                                o_totalprice desc,
                                o_orderdate
                            limit 100;
                    "


                    perf script -i perf.data > out.perf
                    ./stackcollapse-perf.pl out.perf > out.floded
                    ./flamegraph.pl out.floded > mysql.svg

                    NAME=slow-q18-hash-paral-"`date -d yesterday +%Y%m%d%h%m%s`"

                    mkdir -p /data/perf
                    mkdir -p /data/perf/$NAME
                    cp ./mysql.svg /data/perf/$NAME/$NAME.mysql.svg  
                    #cp ./perf.data /data/perf/$NAME/$NAME.perf.data
                    #cp ./out.perf /data/perf/$NAME/$NAME.out.perf  
                    #cp ./out.floded /data/perf/$NAME/$NAME.out.floded

                    cd /data/perf
                    tar -czvf $NAME.tar.gz $NAME

                    cp $NAME.tar.gz /usr/share/nginx/html/$NAME.tar.gz

                    IP=`hostname -I |awk '{print $1}'`
                    echo http://$IP/$NAME.tar.gz

                '''
            }
        }
        
    } // stages

    post { 
        failure { 
            sh label: '', 
            script:'''
               echo "failure"
            '''
        }

		unstable { 
            sh label: '', 
            script:'''
                echo "unstable"    
            '''
        }

        success { 
            sh label: '', 
            script:'''
               echo "success"
            '''
        }
    }
}
